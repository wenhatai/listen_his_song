<?PHP
include("config.php");

class User{
	private $uid = 0;
	private $name;
	private $pass;
	private $registTime;
	private $mysqli;
	private $friends = NULL;
	
	// 构造函数
	function __construct($name = NULL, $pass = NULL){
		$this->name = $name;
		$this->pass = $pass;
		$this->mysqli = new mysqli($GLOBALS['address'], $GLOBALS['username'], $GLOBALS['password'], $GLOBALS['schema']);
		if($this->mysqli->connect_errno){
			echo "Connect failed:%s\n".$this->mysqli->connect_error();
			exit();
		}
		$this->mysqli->query("set names utf8");
	}
	
	// 析构函数
	function __destruct(){
		if($this->mysqli){
			$this->mysqli->close();
		}
	}

	// 检查账号密码是否一致
	function check($uid, $pass){
		$ret = false;
		$stmt = $this->mysqli->prepare("SELECT name, password,registerTime FROM user WHERE uid = ?");
		$stmt->bind_param("i", $uid);
		$stmt->execute();
		$stmt->bind_result($colName, $colPass, $colRegist);
		if($stmt->fetch() && $colPass == $pass){
			$ret = true;
			$this->uid = $uid;
			$this->name = $colName;
			$this->pass = $colPass;
			$this->registTime = $colRegist;
		}
		$stmt->close();
		return $ret;
	}
	
	//通过账号获取用户名
	function getname($uid){
	   $stmt=$this->mysqli->prepare("SELECT name FROM user WHERE uid =?");
	   $stmt->bind_param("i",$uid);
	   $stmt->execute();
	   $stmt->bind_result($colName);
	   if($stmt->fetch()){
	   $this->name=$colName;
	   }
	   $stmt->close();
	}

	// 插入新用户，返回新用户的uid
	function insert(){
		$sql = "INSERT INTO user (name, password) VALUES (?, ?)";
		$stmt = $this->mysqli->prepare($sql);
		$stmt->bind_param("ss", $this->name, $this->pass);
		$stmt->execute();
		$stmt->close(); 
		$this->uid = $this->mysqli->insert_id;
		echo $this->uid;
	}
	
	// 插入新用户的默认音乐流派到数据库users_genre中
	function insert_genre(){
	    $sql = "INSERT INTO users_genre (name,user_id) VALUES (?, ?)";
		$stmt = $this->mysqli->prepare($sql);
		$stmt->bind_param("si", $this->name, $this->uid);
		$stmt->execute();
		$stmt->close(); 
	}
	
	//将上传的新歌曲信息传到数据库中
	function upload_song($name,$src,$genre_name){
	    $sql = "INSERT INTO song (name,src,genre_name) VALUES (?, ?, ?)";
		$stmt = $this->mysqli->prepare($sql);
		$stmt->bind_param("sss", $name,$src,$genre_name);
		$stmt->execute();
		$stmt->close(); 
	}

	// 根据uid删除用户
	function delete(){
		$sql = "DELETE FROM user WHERE uid=?";
		$stmt = $this->mysqli->prepare($sql);
		$stmt->bind_param("i", $this->uid);
		$stmt->execute();
		$stmt->close();
	}

	// 更新用户信息，提供修改密码，修改用户名服务
	function save(){
		$sql = "UPDATE user SET `name`=?, `password`=? WHERE `uid`=?";
		$stmt = $this->mysqli->prepare($sql);
		$stmt->bind_param("ssi", $this->name, $this->pass, $this->uid);
		$stmt->execute();
		$stmt->close();
	}
	
	// 只有一个id的时候自动填充，必须要先有uid才行
	function fillWithUid(){
		$ret = false;
		$sql = "SELECT name, password, registTime FROM user WHERE uid=?";
		$stmt = $this->mysqli->prepare($sql);
		$stmt->bind_param("i", $this->uid);
		$stmt->execute();
		$stmt->bind_result($col1, $col2, $col3);
		if($stmt->fetch()){
			$this->name = $col1;
			$this->pass = $col2;
			$this->registTime = $col3;
			$ret = true;
		}
		$stmt->close();
		return $ret;
	}
	
	function addFriend($fid, $name = NULL){
		$str = NULL;
		$param = NULL;
		if($name != NULL){
			$str = ", nickname";
			$param = ", ?";
		}
		$sql = "INSERT INTO friend (uid, fid $str) values(?, ? $param)";
		$stmt = $this->mysqli->prepare($sql);
		if($name == NULL){
			$stmt->bind_param("ii", $this->uid, $fid);
		} else {
			$stmt->bind_param("iis", $this->uid, $fid, $name);
		}
		$stmt->execute();
		$stmt->close();
		return 1;
	}
	
	
	//从数据库fgroup获取好友自定义好友列表
	function fgrouplist($openid){
		$i=0;
		$group=false;
		$sql = "SELECT id,name FROM fgroup WHERE openid=?";
		$stmt = $this->mysqli->prepare($sql);
		$stmt->bind_param("s", $openid);
		$stmt->execute();
		$stmt->bind_result($col1,$col2);
		while($stmt->fetch()){
			$group['id'][$i]=$col1;
			$group['name'][$i]=$col2;
			$i++;
		}
		$stmt->close();
		return $group;
	}	
	
	//从数据库中获取好友然后添加到相应的列表中
	function friendgroup($allgid){
		$i=0;
		$gid=explode("<tr>",$allgid);
		$fid=false;
		for($j=0;$j<count($gid)-1;$j++){
			$id=(int)$gid[$j];
			$sql = "SELECT fopenid FROM friends WHERE jid=?";
			$stmt = $this->mysqli->prepare($sql);
			$stmt->bind_param("i", $id);
			$stmt->execute();
			$stmt->bind_result($col1);
			while($stmt->fetch()){
				$fid[$id][$i]=$col1;
				$i++;
			}
			$stmt->close();
		}
		return $fid;
	}
	
	function __get($property){
		if(isset($this->$property)){
			return $this->$property;
		} else {
			return NULL;
		}
	}
		
	function __set($property, $value){
		$this->$property = $value;
	}
}
?>
