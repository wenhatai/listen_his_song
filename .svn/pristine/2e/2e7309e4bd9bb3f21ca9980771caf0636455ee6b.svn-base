<?PHP
require_once("config.php");
require_once("class.user.php");
require_once("class.song.php");
class Songrate{
    public $five_days_rate;
	public $ten_days_rate;
	public $fifteen_days_rate;
	public $one_month_rate;
	public $sid;
	}
class Search {
	private $mysqli;
	private $uid;
	private $userfri=array();
	private $friname=array();
	private $rate=array();
	private $users = array();
	private $songs = array();
	private $order_five_days = array();
	private $order_ten_days=array();
	private $order_fifteen_days=array();
	private $order_month=array();
	private $songname=array();
	private $songsid=array();
	private $songgenre=array();
	private $songtimes=array();
	
	function __construct($uid = NULL){
		$this->uid=$uid;
		$this->mysqli = new mysqli($GLOBALS['address'], $GLOBALS['username'], $GLOBALS['password'], $GLOBALS['schema']);
		if($this->mysqli->connect_errno){
			echo "Connect failed:%s\n".mysqli_connect_error();
			exit();
		}
		$this->mysqli->query("set names utf8");
	}
	
	function __destruct(){
		if($this->mysqli){
			$this->mysqli->close();
		}
	}
	
	//通过用户id获取用户好友，返回好友数组
	function friends($uid){
		$sql = "SELECT fid,nickname FROM friend WHERE uid=?";
		$stmt = $this->mysqli->prepare($sql);
		$stmt->bind_param("i",$uid);
		$stmt->execute();
		$stmt->bind_result($col1,$col2);
		$i = 0;
		while($stmt->fetch()){
			$this->userfri[$i]=$col1;
			$this->friname[$i]=$col2;
			$i++;
		}
		$stmt->close();
		return $i;
	}
	
	// 模糊查询(通过姓名）
	function usersByName($name){
		
		$sql = "SELECT * FROM user WHERE user.name LIKE ?";
		$stmt = $this->mysqli->prepare($sql);
		$prepare='%'.$name.'%';
		$stmt->bind_param("s", $prepare);
		$stmt->execute();
		$stmt->bind_result($col1, $col2, $col3, $col4);
		$i = 0;
		while($stmt->fetch()){
			$this->users[$i] = new User();
			$this->users[$i]->uid = $col1;
			$this->users[$i]->name = $col2;
			$this->users[$i]->password = $col3;
			$this->users[$i]->registerTime = $col4;
			$i++;
		}
		$stmt->close();
		return $i;
	}
	
	 //精确查询（通过账号）
	function usersById($id){
		
		$sql = "SELECT * FROM user WHERE uid=?";
		$stmt = $this->mysqli->prepare($sql);
		$stmt->bind_param("i", $id);
		$stmt->execute();
		$stmt->bind_result($col1, $col2, $col3, $col4);
		$i = 0;
		while($stmt->fetch()){
			$this->users[$i] = new User();
			$this->users[$i]->uid = $col1;
			$this->users[$i]->name = $col2;
			$this->users[$i]->password = $col3;
			$this->users[$i]->registerTime = $col4;
			$i++;
		}
		$stmt->close();
		return $i;
	}

	
	// 模糊查询歌曲
	function songsByName($name){
	    		
		$sql = "SELECT sid,name,genre_name FROM song WHERE song.name LIKE ?";
		$stmt = $this->mysqli->prepare($sql);
		$prepare='%'.$name.'%';
		$stmt->bind_param("s", $prepare);
		$stmt->execute();
		$stmt->bind_result($col1, $col2, $col3);
		$i = 0;
		while($stmt->fetch()){
			$this->songs[$i] = new Song();
			$this->songs[$i]->sid = $col1;
			$this->songs[$i]->name = $col2;
			$this->songs[$i]->genre_name = $col3;
			$i++;
		}
		$stmt->close();
		return $i;
	}
	
	// 获取某用户最近听的最多的歌曲
	function songListOfUser($uid){
		$sql1 = "SELECT sid FROM user_song WHERE uid=? order by times_5d desc";
		$stmt = $this->mysqli->prepare($sql1);
		$stmt->bind_param("i", $uid);
		$stmt->execute();
		$stmt->bind_result($col1);
		$i = 0;
		while($stmt->fetch()){
			$this->order_five_days[$i] = $col1;
			$i++;
		}
		$stmt->close();
		$sql2 = "SELECT sid FROM user_song WHERE uid=? order by times_10d desc";
		$stmt = $this->mysqli->prepare($sql2);
		$stmt->bind_param("i", $uid);
		$stmt->execute();
		$stmt->bind_result($col1);
		$i = 0;
		while($stmt->fetch()){
			$this->order_ten_days[$i] = $col1;
			$i++;
		}
		$stmt->close();
		$sql3 = "SELECT sid FROM user_song WHERE uid=? order by times_15d desc";
		$stmt = $this->mysqli->prepare($sql3);
		$stmt->bind_param("i", $uid);
		$stmt->execute();
		$stmt->bind_result($col1);
		$i = 0;
		while($stmt->fetch()){
			$this->order_fifteen_days[$i] = $col1;
			$i++;
		}
		$stmt->close();
		$sql4 = "SELECT sid FROM user_song WHERE uid=? order by times_30d desc";
		$stmt = $this->mysqli->prepare($sql4);
		$stmt->bind_param("i", $uid);
		$stmt->execute();
		$stmt->bind_result($col1);
		$i = 0;
		while($stmt->fetch()){
			$this->order_month[$i] = $col1;
			++$i;
		}
		$stmt->close();
		return $i;
	}
	
	//根据天数显示用户或其好友的歌曲频率排名
	function songlistorderbydays($id,$days){
		if($days==1)
			$sql1 = "SELECT sid,times_5d FROM user_song WHERE uid=? order by times_5d desc";
		if($days==2)
			$sql1 = "SELECT sid,times_10d FROM user_song WHERE uid=? order by times_10d desc";
		if($days==3)
			$sql1 = "SELECT sid,times_15d FROM user_song WHERE uid=? order by times_15d desc";
		if($days==4)
			$sql1 = "SELECT sid,times_30d FROM user_song WHERE uid=? order by times_30d desc";
		$stmt = $this->mysqli->prepare($sql1);
		$stmt->bind_param("i", $id);
		$stmt->execute();
		$stmt->bind_result($col1,$col2);
		$n = 0;
		while($stmt->fetch()){
			$days_rate[$n] = $col1;
			$days_hot [$n] = round($col2,3)*100;
			$n++;
		}
		for($i=0;$i<$n;$i++){
			$sql2 = "SELECT name,genre_name FROM song WHERE sid=?";
			$stmt = $this->mysqli->prepare($sql2);
			$stmt->bind_param("i",$days_rate[$i]);
			$stmt->execute();
			$stmt->bind_result($col3,$col4);
			if($stmt->fetch()){
				$days_info[$i][0]=$col3;
				$days_info[$i][1]=$col4;
			}
			$stmt->close();
		}
		for($i=0;$i<$n;$i++){
			echo $days_rate[$i]."|".$days_info[$i][0]."|".$days_info[$i][1]."|".$days_hot[$i]."%";
			if($i<$n-1)
				echo "!";
		}
	}
	
	
	//通过sid获取song表中的曲目,流派
	function getsongnameBysid($sid)
	{
	    $sql = "SELECT name,genre_name FROM song WHERE sid=?";
		$stmt = $this->mysqli->prepare($sql);
		$stmt->bind_param("i", $sid);
		$stmt->execute();
		$stmt->bind_result($col1,$col2);
		$i = 0;
		while($stmt->fetch()){
			$this->songname[$i] = $col1;
			$this->songgenre[$i] = $col2;
			++$i;
		}
		$stmt->close();
	}
	//获取用户最近五天，十天，十五天，一个月听的歌
	function getsongs_bydays($uid,$days)
	{
	    if($days=="five")
		{
		$sql="SELECT sid,times_5d FROM user_song WHERE openid=? AND times_5d !=0 AND five_days_key == 1 order by times_5d desc";
		}
	    if($days=="ten")
		{
		$sql="SELECT sid,times_10d FROM user_song WHERE openid=? AND times_10d !=0 AND ten_days_key == 1 order by times_10d desc";
		}
	    if($days=="fifteen")
		{
		$sql="SELECT sid,times_15d FROM user_song WHERE openid=? AND times_15d !=0 AND fifteen_days_key == 1 order by times_15d desc";
		}
	    if($days=="month")
		{
		$sql="SELECT sid,times_30d FROM user_song WHERE openid=? AND times_30d !=0 AND month_days_key == 1 order by times_30d desc";
		}
		$stmt=$this->mysqli->prepare($sql);
		$stmt->bind_param("s",$uid);
		$stmt->execute();
		$stmt->bind_result($col1,$col2);
		$i=0;
		while($stmt->fetch()){
		   $this->songsid[$i] = $col1;
		   $this->songtimes[$i] = $col2;
		   ++$i;
		}
		$stmt->close();
		return $i;
	}
	
	
	// 获取流派里面所有歌曲排名
	function songListInGenre($genre_name){
	    $sql = "SELECT name FROM song WHERE genre_name=? order by times desc";
		$stmt=$this->mysqli->prepare($sql);
		$stmt->bind_param("s",$genre_name);
		$stmt->execute();
		$stmt->bind_result($col1);
		$i = 0;
		while($stmt->fetch()){
		   $this->songname[$i] = $col1;
		   ++$i;
		}
		$stmt->close();
		return $i;
	}
	
	//获取某好友某首歌的频率
	function songfriendrate($id,$song){
		$ret = false;
		$sql1="SELECT sid FROM song WHERE name=?";
		$stmt1 = $this->mysqli->prepare($sql1);
		$stmt1->bind_param("s", $song);
		$stmt1->execute();
		$stmt1->bind_result($col1);
		if($stmt1->fetch()){
			$song_id=$col1;
		}
		else{
			return $ret;
		}
		$stmt1->close();
		$sql2 = "SELECT five_days_rate,ten_days_rate,fifteen_days_rate,one_month_rate 
		FROM user_song WHERE uid=? AND sid=?";
		$stmt2 = $this->mysqli->prepare($sql2);
		$stmt2->bind_param("ii",$id,$song_id);
		$stmt2->execute();
		$stmt2->bind_result($col1, $col2, $col3,$col4);
		if($stmt2->fetch()){
			$this->rate[0] = $col1;
			$this->rate[1] = $col2;
			$this->rate[2] = $col3;
			$this->rate[3] = $col4;
			$ret = true;
		}
		$stmt2->close();
		return $ret;
	}
	function __get($property){
		if(isset($this->$property)){
			return $this->$property;
		} else {
			return NULL;
		}
	}
		
	function __set($property, $value){
		$this->$property = $value;
	}
}
?>